{"name": "test_03_add_new_delivery_address_at_checkout", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_profile_elements.TestNewStarPizzaProfile testMethod=test_03_add_new_delivery_address_at_checkout>\n\n    @allure.description(\"To verify and add delivery address at checkout stage.\")\n    def test_03_add_new_delivery_address_at_checkout(self):\n        By_xpath = self.driver.find_element_by_xpath\n        try:\n            f = open(\"data.json\", \"r\")\n            data = json.loads(f.read())\n            time.sleep(2)\n            new_address = random.choice(data[\"addresslist\"])\n            hno = ''.join([\"{}\".format(randint(0, 9)) for num in range(0, 2)])\n            sign_in(self.driver, data[\"username3\"], data[\"password\"])\n            for m in data[\"side_order\"]:\n                print(m)\n                execute_click_by_product(self.driver, m)\n                select_product(self.driver, m[\"menuitem\"])\n                time.sleep(2)\n                select_combo_item(self.driver, \"Regular Crust\")\n                add_to_bag_and_verify_cart_details(self.driver)\n            Checkout_to_paymentscreen(self.driver)\n            add_new_del_add(self.driver, new_address)\n            # place_ur_order_from_payment(self.driver, \"Delivery\")\n            time.sleep(2)\n            print(\"Test case 04 ran successfully\")\n            # time.sleep(5)\n            f.close()\n        except Exception as e:\n            allure.attach(self.driver.get_screenshot_as_png(\n            ), name='exception_screen', attachment_type=AttachmentType.PNG)\n>           raise e\n\ntest_profile_elements.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_profile_elements.py:95: in test_03_add_new_delivery_address_at_checkout\n    add_new_del_add(self.driver, new_address)\nmethods.py:686: in add_new_del_add\n    raise e\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>, address = '7971 Castor Ave , Philadelphia, PA 19152'\n\n    @allure.step(\"To add a new Delivery Address at checkout stage.\")\n    def add_new_del_add(driver, address):\n        By_xpath = driver.find_element_by_xpath\n        By_id = driver.find_element_by_id\n        try:\n            By_xpath(checkoutlocators.plus_add_address).click()\n            By_id(checkoutlocators.new_address_bar).send_keys(address)\n            time.sleep(1)\n            By_id(checkoutlocators.address_sugg).click()\n            By_id(checkoutlocators.save_this_address_btn).click()\n            allure.attach(driver.get_screenshot_as_png(),\n                          name='screen', attachment_type=AttachmentType.PNG)\n            time.sleep(7)\n            address_list = driver.find_elements_by_xpath(\n                checkoutlocators.address_list)\n            print(address)\n            for i in address_list:\n                print(i.text)\n>               assert address in i.text\nE               AssertionError\n\nmethods.py:684: AssertionError"}, "description": "To verify and add delivery address at checkout stage.", "steps": [{"name": "To fetch the website with url: 'https://newstar.pizza/home'", "status": "passed", "attachments": [{"name": "website_screen", "source": "591b3b31-7c30-43f8-bc04-804fe0910d62-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}, {"name": "site_url", "value": "'https://newstar.pizza/home'"}], "start": 1672226266239, "stop": 1672226276668}, {"name": "To verify that user is able to sign in with any email id.", "status": "passed", "attachments": [{"name": "Signin_screen", "source": "8a3cdb95-9946-464d-b190-1c77b0b0f5bd-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}, {"name": "email", "value": "'ritutanwar1510@gmail.com'"}, {"name": "password", "value": "'Ritu@1510'"}], "start": 1672226278673, "stop": 1672226298447}, {"name": "To perform click operation on the element specified in list:'SIDE ORDERS'", "status": "passed", "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}, {"name": "productname", "value": "'SIDE ORDERS'"}], "start": 1672226298447, "stop": 1672226298563}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "ad71f3b2-c57b-4e64-a0d5-f7acb2046c01-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}, {"name": "productname", "value": "'GARLIC BREAD SIDE'"}], "start": 1672226301572, "stop": 1672226302248}, {"name": "To be able to select desired product", "status": "passed", "attachments": [{"name": "toppings_screen", "source": "7a2136f2-dfa7-494e-9a9c-5c2753c17ffe-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}, {"name": "size", "value": "'Regular Crust'"}], "start": 1672226304256, "stop": 1672226316100}, {"name": "to add product to bag and verify cart details before checkout", "status": "passed", "attachments": [{"name": "cart_screen", "source": "05972eff-d489-4661-be78-274b429b2e5d-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}], "start": 1672226316100, "stop": 1672226322479}, {"name": "Checkout to payment screen", "status": "passed", "attachments": [{"name": "screen", "source": "de5d09c4-f988-4c4a-892e-a437865fe649-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}], "start": 1672226322479, "stop": 1672226330371}, {"name": "To add a new Delivery Address at checkout stage.", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\python37\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\New_star_pizza\\methods.py\", line 686, in add_new_del_add\n    raise e\n  File \"C:\\Users\\Digital Suppliers\\Desktop\\New_star_pizza\\methods.py\", line 684, in add_new_del_add\n    assert address in i.text\n"}, "attachments": [{"name": "screen", "source": "244544ba-c4f9-455c-b7af-a39af4275b0e-attachment.png", "type": "image/png"}], "parameters": [{"name": "driver", "value": "<selenium.webdriver.chrome.webdriver.WebDriver (session=\"1b87af59d3433336cba8644b880b43e8\")>"}, {"name": "address", "value": "'7971 Castor Ave , Philadelphia, PA 19152'"}], "start": 1672226330372, "stop": 1672226339765}], "attachments": [{"name": "exception_screen", "source": "556abaf8-5a72-4c54-9238-fe4c9db406c3-attachment.png", "type": "image/png"}], "start": 1672226263425, "stop": 1672226342417, "uuid": "c2cd9ae9-ea63-4ccf-9511-be41e2024da3", "historyId": "a8032d671b3ac3cd48e634057e0a3d37", "testCaseId": "3f19a8eed0b66b26730fd3d3e616f031", "fullName": "test_profile_elements.TestNewStarPizzaProfile#test_03_add_new_delivery_address_at_checkout", "labels": [{"name": "suite", "value": "test_profile_elements"}, {"name": "subSuite", "value": "TestNewStarPizzaProfile"}, {"name": "host", "value": "DESKTOP-JHQBC5Q"}, {"name": "thread", "value": "8856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_profile_elements"}]}